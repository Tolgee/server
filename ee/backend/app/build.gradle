
plugins {
    id 'io.tolgee.gradle.base'
    id 'io.tolgee.gradle.kotlin'
    id 'io.tolgee.gradle.spring'
    id 'io.tolgee.gradle.hibernate'
    id 'io.tolgee.gradle.liquibase'
}

allOpen {
    annotation("javax.persistence.Entity")
    annotation("javax.persistence.MappedSuperclass")
    annotation("javax.persistence.Embeddable")
    annotation("org.springframework.stereotype.Service")
    annotation("org.springframework.stereotype.Component")
    annotation("org.springframework.transaction.annotation.Transactional")
    annotation("org.springframework.beans.factory.annotation.Configurable")
    annotation("org.springframework.boot.test.context.SpringBootTest")
}

test {
    useJUnitPlatform()
    maxHeapSize = "2048m"
}

//configureLiquibase("ee", "hibernate:spring:io.tolgee.ee.model", 'src/main/resources/db/changelog/ee-schema.xml')

diff.dependsOn compileKotlin
diffChangeLog.dependsOn compileKotlin

dependencies {
    implementation("org.springframework.boot:spring-boot-starter")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation(project(":data"))
    implementation(project(":security"))
    implementation "org.springframework.boot:spring-boot-starter-hateoas"
    implementation "org.springframework.boot:spring-boot-starter-batch"

    /**
     * SPRING DOC
     */
    implementation libs.springDocOpenApiWebMvcCore
    implementation libs.springDocOpenApiUi
    implementation libs.springDocOpenApiKotlin
    implementation libs.springDocOpenApiDataRest
    implementation libs.springDocOpenApiHateoas

    implementation libs.hibernateTypes

    /**
     * Liquibase
     */
    implementation libs.liquibaseCore
    liquibaseRuntime libs.liquibaseCore
    liquibaseRuntime 'org.postgresql:postgresql'
    liquibaseRuntime libs.liquibaseGroovyDsl
    liquibaseRuntime libs.liquibaseHibernate
    liquibaseRuntime libs.kotlinReflect
    liquibaseRuntime(project(":data"))

    liquibaseRuntime sourceSets.main.output
    liquibaseRuntime 'org.springframework.boot:spring-boot-starter-data-jpa'
}

tasks.findByName("jar").enabled(true)
tasks.findByName("bootJar").enabled(false)

jar {
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
}
